continue
subject
continue
subject
continue
exit
promotion.expiration_date 
promotion.expiration_date == Time.now
promotion.expiration_date = "2022-19-04"
promotion.expiration_date == Time.now
promotion.expiration_date == Time.today 
promotion.expiration_date.text
promotion.expiration_date
promoion.expiration_date
promotion = Promotion.find_by(id: @coupon.promotion_id)
p.expiration_date
p = _
Promotion.find_by(id: @coupon.promotion_id)
@coupon.expiration_date
@coupon.expiration_dater
@coupon
continue
@coupon
params
@coupon.can_be_burned?
@coupon
continue
@coupon
continue
@coupon
Promotion.find_by(id: value.promotion_id)
ProductCategory.find_by(id: value.product_category_id)
value.product_category_id
value
continue
@coupon.burn?
@coupon.active?
@coupon.status
@coupon.code
@coupon
continue
ProductCategoryPromotion.find_by( promotion_id: promotion_id)
ProductCategoryPromotion.find_by(product_category_id: category_id, promotion_id: promotion_id)
ProductCategory.last
@coupon
params
ProductCategory.find_by(code: (params[:product_category][:code])).id
promotion_id
promotion_id = Coupon.find_by!(code: params[:code]).promotion_id
continue
exception
next
continue
Coupon.find_by!(code: params[:code]).promotion_id
Coupon.find_by!(code: params[:code])
params
continue
resource.errors.full_messages[0]
resource.errors.full_messages
resource.errors.full_message
resource.errors.type
resource.errors.last
resource.errors[0]
resource.errors[1]
resource.errors.type
resource.errors
resource
resaource
next
continue
value
continue
exception
next
~next
continue
errors.messagecontinue
errors.message
errors.type
arrors.type
email.include? '@luizalabs.com.br'
email
errors
record
continue
@promotion.update()
@promotion.update(promotion_params)
@promotion.save!(promotion_params)
promotion_params
continue
render :edit, alert: 'não pode ficar em branco'
continue
exception
next
render :new
flash.now[:danger] = "Invalid resident key."
params
continue
error.class.name
ActionDispatch::ExceptionWrapper.status_code_for_exception(error.class.name)
next
render :edit, alert: 'não pode ficar em branco'
@promotion.update(promotion_params)
continue
@promotion
continue
@promotion
set_promotion_params
params
@promotion
continue
params
@params
